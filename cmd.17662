python env:
    PYTHONPATH
    PYTHONCASEOK
    PYTHONSTARTUP
    PYTHONHOME
------------------------------------
python run mode:
    interactive mode
        python
    command mode 
        python script.py 
    IDE mode 
        pycharm
------------------------------------
Chinese language encode
    # -*- coding: UTF-8 -*-
    #coding:utf-8
------------------------------------
strict indentation
    -----------------
    if True:
        print "Answer"
        print "True"
    else:
        print "Answer"
        # 没有严格缩进，在执行时会报错
      print "False"
    ------------------
    multi-line-statement
        \
    -----------------
------------------------------------
python quote
    -----------------
    ''
    ""
    """ """
------------------------------------
python mark
    ''' mark content '''
    """ mark content """
------------------------------------
one-line with multi-satement
    statement1; statement2
------------------------------------
var-assign
    varname1 = val1
    varname1 = varname2 = val;
    varname1, varname2 = val1, val2
------------------------------------
var-type
    -----------------
    numbers
        int 
        long
        float 
        complex
    -----------------
    string
        index
            left-2-right
                0 ... len-1
            right-2-left
                -1 ... -len
        add operator:
            +
        stringname[begin:end]
        repeat operator:
            *
    -----------------
    list
        []
        index
        add operator:
            +
        repeat operator:
            *
            listname[begin:end]
    -----------------
    tuple
        ()
        index 
        add operator
    -----------------
    dict
        { }
        index
    -----------------
------------------------------------
python operator
    -----------------
    math operator
        + - * / % **
    -----------------
    compare operator
        > >= == < <= != <>
    -----------------
    bit operator
        & ^ | ~ >> <<
    -----------------
    logic operator
        and or not
    -----------------
    memeber operator
        in 
        not in
    -----------------
    identify operator
        is 
        is not
    -----------------
------------------------------------
python condition statement;
    ------------------
    if condition1：
        statement1 
    else：
        statement2
    ------------------
    if condition2:
        statement1
    elif condition2:
        statement2
    else 
        statement3
    ------------------
------------------------------------
python loop
    -----------------
    while condition:
        statement 

    while condition:
        statement1
    else 
        statement2
    -----------------
    for iterating_var in sequence:
        statements(s)

    for iterating_var in sequence:
        statements(s)
    else 
        statement
    -----------------
    break
    continue
    pass
    -----------------
------------------------------------
python numbers
    -----------------
    var = val
    del var 
    -----------------
    type
        int 
        long int 
        float 
        complex numbers
    -----------------
    type convert 
    -----------------
    math-function
    random-function
    triangle-function
    -----------------
    numbers-const
------------------------------------
python string
    -----------------
    var = 'hello'
    val = "world"
    -----------------
    python escape
    -----------------
    string operator
        +
        *
        [index]
        [begIndex:endIndex]
        in
        not in 
        R/r 
            original string 
        %   
            format string 
        triple quote 
            ''' content '''
        unicode string 
            u"hello"
        string.method
------------------------------------
python list 
    -----------------
    listVar = [1,2,3]
    -----------------
    index
        listVar[index]
        listVar[begIndex:endIndex]
    ------------------
    modify
        listVar[index] = val1
    -----------------
    del 
        del listVar[index]
    -----------------
    list operator
        +
        *
        in 
        not in 
        len 
    ------------------
    list compare 
        cmp
        len 
        max 
        min
        list(seq)
    -----------------
    list.method
    ------------------
------------------------------------
python tuple
    -----------------
    tuple = (val1, val2)
    -----------------
    index 
        [index]
        [begin:endIndex]
    modify
        element modify not allowed
    del 
        element del not allowed 
    -----------------
    tuple operator
        +
        *
        len 
        in 
        not in 
    -----------------
    任意无符号的对象，以逗号隔开，默认为元组
    ------------------------------------
    tuple.method
        cmp 
        len 
        max 
        min
        tuple(seq)
------------------------------------ 
python dict 
    -----------------
    dict = {key1 : value1, key2 : value2 }
    -----------------
    index
        dict[key]
    modify 
        dict[key] = val 
    insert
        dict[key] = val 
    del 
        del dict[key]
        dict.clear
    -----------------
    dict outer-method 
        cmp
        len 
        str 
        type
    dict bultin-method 
        clear 
        copy
------------------------------------
python date
    -----------------
    time.time()
------------------------------------
python type 
    mutable-object
        list, dict 
    immutable-object
        string, tuple, numbers
------------------------------------
python function
    -----------------------
    def functionname( parameters ):
       "函数_文档字符串"
       function_suite
       return [expression]
    -----------------------
    def functionname([formal_args,] *var_args_tuple ):
       "函数_文档字符串"
       function_suite
       return [expression]
------------------------------------
lambda expression
    lambda [arg1 [,arg2,.....argn]]:expression
    -----------------
    # 可写函数说明
    sum = lambda arg1, arg2: arg1 + arg2;
     
    # 调用sum函数
    print "相加后的值为 : ", sum( 10, 20 )
    print "相加后的值为 : ", sum( 20, 20 )
    ------------------
